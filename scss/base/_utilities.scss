
// Utilities
//
// Provided here are several utilities to either include in other elements'
// CSS, or to apply as classes directly to HTML elements.
//
// It's advised to not use @extend on the classes found here, as it can make
// the compiled CSS a jumble and potentially harder to debug.
//
// Styleguide 50


// clearfix() / .clearfix
//
// Useful when you need an element to clear its children, or to break an 
// element out of the flow if its siblings.
//
// Styleguide 50.1

@mixin clearfix() {
	&::before,
	&::after {
	  content: '';
	  display: table;
	  clear: both;
	}
}

.clearfix {
	@include clearfix();
}





// Context Class Utilities
//
// Context classes will effect the direct children of the element they're
// applied to. If a context class relates directly to a visual attribute
// (eg. `.has-background-*`), only that attribute will be applied.
//
// Styleguide 50.2



// has-inline-elements() / .has-inline-elements
//
// Use if you need to have an element's direct children display inline.
//
// Styleguide 50.2.1

@mixin has-inline-elements() {

	vertical-align: baseline;

	& > * {
		display: inline-block;
		margin: 0 $spacing-inner/2;
	}

}

.has-inline-elements {
	@include has-inline-elements();
}



// Widths
//
// These utilities are for page-level containers to allow for fullbleed
// or capped width displays.
//
// Styleguide 50.3



// width-capped() / .width-capped
//
// Styleguide 50.3.1

@mixin width-capped() {
	width: 100%;
	margin-top: $spacing-outer;
	margin-bottom: $spacing-outer;
	max-width: 80rem;
}

.width-capped {
	@include width-capped();
}



// width-fullbleed() / .width-fullbleed
//
// Styleguide 50.3.1

@mixin width-fullbleed() {
	
	max-width: none;
	width: 100%;
	position: relative;
	left: -50%;
	margin-left: 50%;
	
	& > * {
		@include width-capped();
	}

}

.width-fullbleed {
	@include width-fullbleed();
}







.has-background--primary {
	background: $background-color-primary;
}

.has-background--secondary {
	background: $background-color-secondary;
}

.has-background--tertiary {
	background: $background-color-tertiary;
}


.has-border--primary {
	border: $border-width-primary solid $border-color-primary;
}
	.has-border--primary--top {
		border-top: $border-width-primary solid $border-color-primary;
	}
	.has-border--primary--right {
		border-right: $border-width-primary solid $border-color-primary;
	}
	.has-border--primary--bottom {
		border-bottom: $border-width-primary solid $border-color-primary;
	}
	.has-border--primary--left {
		border-bottom: $border-width-primary solid $border-color-primary;
	}

.has-border--secondary {
	border: $border-width-secondary solid $border-color-secondary;
}
	.has-border--secondary--top {
		border-top: $border-width-secondary solid $border-color-secondary;
	}
	.has-border--secondary--right {
		border-right: $border-width-secondary solid $border-color-secondary;
	}
	.has-border--secondary--bottom {
		border-bottom: $border-width-secondary solid $border-color-secondary;
	}
	.has-border--secondary--left {
		border-bottom: $border-width-secondary solid $border-color-secondary;
	}